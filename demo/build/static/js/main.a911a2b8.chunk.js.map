{"version":3,"sources":["components/TestForm.js","App.js","components/BaseLineGrid.js","serviceWorker.js","index.js"],"names":["TestForm","props","handleSubmit","e","preventDefault","setState","validated","handleValidation","target","parentNode","classList","add","state","Form","onSubmit","this","Field","label","width","Input","type","required","onChange","Check","mb","Button","Component","testText","styled","div","theme","colors","text","background","primary","success","warning","danger","info","testText2","MyAlgoWallet","Pipeline","init","App","PipelineShell","textAlign","position","Box","m","BaseStyles","Fragment","wallet","AlgoWCButton","AlgoSignerButton","MultiWalletConnect","Heading","as","fontSize","Text","fontWeight","size","Link","AlgoAddress","address","textLabels","AlgoFetch","Card","my","placeholder","Icon","name","color","Algo","Btc","Tooltip","message","variant","Blockie","opts","seed","bgcolor","scale","spotcolor","Avatar","src","Textarea","rows","defaultValue","Slider","disabled","Select","options","AsaList","Progress","value","Radio","readOnly","checked","Checkbox","opacity","Flex","height","bg","mx","px","mr","Outline","ml","Table","Image","AlgoSendButton","Loader","QR","Modal","ToastMessage","Processing","Success","Failure","Pill","Flash","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a911a2b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button } from 'pipeline-ui';\r\n\r\nclass TestForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { validated: false };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ validated: true });\r\n  };\r\n\r\n  handleValidation = e => {\r\n    e.target.parentNode.classList.add('was-validated');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Field label=\"Email\" width={1}>\r\n          <Form.Input\r\n            type=\"email\"\r\n            required\r\n            width={1}\r\n            onChange={this.handleValidation}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field validated={this.state.validated} label=\"Password\" width={1}>\r\n          <Form.Input\r\n            type=\"password\"\r\n            required\r\n            width={1}\r\n            onChange={this.handleValidation}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Form.Check\r\n          label=\"Remember me?\"\r\n          mb={3}\r\n          onChange={this.handleValidation}\r\n        />\r\n\r\n        <Button type=\"submit\" width={1}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestForm;\r\n","import React, { Component } from 'react'\r\n\r\nimport './index.css'\r\n\r\nimport {\r\n  Avatar,\r\n  Blockie,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Field,\r\n  Flash,\r\n  Flex,\r\n  Heading,\r\n  Icon,\r\n  Image,\r\n  Input,\r\n  Link,\r\n  Loader,\r\n  AlgoButton,\r\n  AlgoWCButton,\r\n  AlgoSignerButton,\r\n  MultiWalletConnect,\r\n  AlgoSendButton,\r\n  Modal,\r\n  Pill,\r\n  Progress,\r\n  QR,\r\n  Radio,\r\n  AlgoAddress,\r\n  Select,\r\n  Slider,\r\n  Table,\r\n  Text,\r\n  Textarea,\r\n  ToastMessage,\r\n  Tooltip,\r\n  BaseStyles,\r\n  ThemeProvider,\r\n  theme,\r\n  AsaList,\r\n  Pipeline,\r\n  AlgoFetch,\r\n  PipelineShell\r\n} from 'pipeline-ui'\r\n\r\nimport { Algo, Btc } from '@pipeline-ui/icons'\r\n\r\nimport TestForm from './components/TestForm'\r\nimport BaseLineGrid from './components/BaseLineGrid'\r\n\r\nconst testTheme = {\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    text: 'black',\r\n    background: 'white',\r\n    primary: 'crimson',\r\n    'primary-light': 'red',\r\n    'primary-dark': 'darkred',\r\n    success: 'green',\r\n    warning: 'orange',\r\n    danger: 'orangered',\r\n    info: 'blue',\r\n  },\r\n}\r\nconst testText = \"Algorand: Proof-of-stake blockchain\";\r\nconst testText2 = \"Fetching wallet data\";\r\nconst MyAlgoWallet = Pipeline.init();\r\n\r\nconst testComponents = props => (\r\n  <React.Fragment>\r\n    <AlgoButton wallet={MyAlgoWallet}/>\r\n    <AlgoWCButton wallet={MyAlgoWallet}/>\r\n    <AlgoSignerButton wallet={MyAlgoWallet}/>\r\n    <MultiWalletConnect wallet={MyAlgoWallet}/>\r\n    <h1>H1 - {testText}</h1>\r\n    <h2>H1 - {testText}</h2>\r\n    <h3>H1 - {testText}</h3>\r\n    <h4>H1 - {testText}</h4>\r\n    <h5>H1 - {testText}</h5>\r\n    <h6>H1 - {testText}</h6>\r\n\r\n    <Heading as={'h1'}>H1 - {testText}</Heading>\r\n    <Heading as={'h2'}>H2 - {testText}</Heading>\r\n    <Heading as={'h3'}>H3 - {testText}</Heading>\r\n    <Heading as={'h4'}>H4 - {testText}</Heading>\r\n    <Heading as={'h5'}>H5 - {testText}</Heading>\r\n    <Heading as={'h6'}>H6 - {testText}</Heading>\r\n\r\n    <Heading as={'h1'} fontSize={1}>\r\n      H1 - {testText}\r\n    </Heading>\r\n    <Heading as={'h2'} fontSize={2}>\r\n      H2 - {testText}\r\n    </Heading>\r\n    <Heading as={'h3'} fontSize={3}>\r\n      H3 - {testText}\r\n    </Heading>\r\n    <Heading as={'h4'} fontSize={4}>\r\n      H4 - {testText}\r\n    </Heading>\r\n    <Heading as={'h5'} fontSize={5}>\r\n      H5 - {testText}\r\n    </Heading>\r\n    <Heading as={'h6'} fontSize={6}>\r\n      H6 - {testText}\r\n    </Heading>\r\n\r\n    <Heading fontSize={7}>XL - {testText}</Heading>\r\n\r\n    <Heading as={'h1'} fontSize={6}>\r\n      H1 - {testText}\r\n    </Heading>\r\n\r\n    <Heading as={'h2'} fontSize={5}>\r\n      H2 - {testText}\r\n    </Heading>\r\n\r\n    <Heading as={'h3'} fontSize={4}>\r\n      H3 - {testText}\r\n    </Heading>\r\n\r\n    <Heading as={'h4'} fontSize={3}>\r\n      H4 - {testText}\r\n    </Heading>\r\n\r\n    <Heading as={'h5'} fontSize={2}>\r\n      H5 - {testText}\r\n    </Heading>\r\n\r\n    <Heading as={'h6'} fontSize={1}>\r\n      H6 - {testText}\r\n    </Heading>\r\n\r\n    <Heading fontSize={0}>SX - {testText}</Heading>\r\n\r\n    <Text fontWeight={1}>\r\n      1 / 300 — {testText2}.\r\n    </Text>\r\n    <Text fontWeight={2}>\r\n      2 / 400 — {testText2}.\r\n    </Text>\r\n    <Text fontWeight={3}>\r\n      3 / 600 — {testText2}.\r\n    </Text>\r\n    <Text fontWeight={4}>\r\n      4 / 700 — {testText2}.\r\n    </Text>\r\n\r\n    <Button size={'medium'}>Click me!</Button>\r\n    <Link>I'm a Link!</Link>\r\n    <AlgoAddress address=\"C5E5W3BERJALL2ZH4YB3TAP7ZSJH2PJUPDHLGF74YE6DBMQ62AA47IXGNQ\" />\r\n    <AlgoAddress\r\n      textLabels\r\n      address=\"C5E5W3BERJALL2ZH4YB3TAP7ZSJH2PJUPDHLGF74YE6DBMQ62AA47IXGNQ\"\r\n    />\r\n    <AlgoFetch address=\"C5E5W3BERJALL2ZH4YB3TAP7ZSJH2PJUPDHLGF74YE6DBMQ62AA47IXGNQ\"/>\r\n    <Card my={4}>\r\n      <TestForm />\r\n    </Card>\r\n    <Input placeholder={'placeholder'} />\r\n\r\n    <Box>\r\n      <Text>Icon component from pipeline-ui</Text>\r\n      <Icon name={'Info'} />\r\n      <Icon name={'Algo'} />\r\n      <Icon name={'Btc'} />\r\n    </Box>\r\n\r\n    <Box>\r\n      <Text>\r\n        Icon component from pipeline-ui using \"primary\" color from theme\r\n      </Text>\r\n      <Icon name={'Info'} color=\"primary\" />\r\n      <Icon name={'Algo'} color=\"primary\" />\r\n      <Icon name={'Btc'} color=\"primary\" />\r\n    </Box>\r\n    <Box>\r\n      <Text>Icon component from pipeline-ui, color=\"green\"</Text>\r\n      <Icon name={'Info'} color=\"green\" />\r\n      <Icon name={'Algo'} color=\"green\" />\r\n      <Icon name={'Btc'} color=\"green\" />\r\n    </Box>\r\n    <Box>\r\n      <Text>Icons imported as components from @pipeline/icons</Text>\r\n      <Algo color=\"primary\" />\r\n      <Btc color=\"primary\" />\r\n      <Algo color=\"green\" />\r\n      <Btc color=\"green\" />\r\n    </Box>\r\n    <Tooltip message=\"Your custom message\">\r\n      <span>hover me</span>\r\n    </Tooltip>\r\n    <Tooltip variant={'light'} message=\"Your custom message\">\r\n      <Text>hover me</Text>\r\n    </Tooltip>\r\n    <Blockie\r\n      opts={{\r\n        seed: 'foo',\r\n        color: '#dfe',\r\n        bgcolor: '#a71',\r\n        size: 16,\r\n        scale: 3,\r\n        spotcolor: '#536dfe',\r\n      }}\r\n    />\r\n    <Avatar src={'https://source.unsplash.com/128x128/?people,face,portrait'} />\r\n    <Avatar src={'https://source.unsplash.com/128x128/?people,face,portrait'} size=\"small\" />\r\n    <Avatar  src={'https://source.unsplash.com/128x128/?people,face,portrait'} size=\"medium\" />\r\n    <Avatar src={'https://source.unsplash.com/128x128/?people,face,portrait'} size=\"large\" />\r\n    <Textarea rows={4} defaultValue=\"Type here…\" />\r\n    <Slider />\r\n    <Slider disabled />\r\n    <Heading as={'h5'} fontSize={5}>\r\n      Select ASA (ASAList as a component)\r\n    </Heading>\r\n    <Select options={AsaList} />\r\n    <Progress value={0.5} />\r\n    <Field label=\"text\">\r\n      <Input type=\"text\" />\r\n    </Field>\r\n    <Field label=\"number\">\r\n      <Input type=\"number\" />\r\n    </Field>\r\n    <Field label=\"file\">\r\n      <Input type=\"file\" />\r\n    </Field>\r\n    <Field label=\"color\">\r\n      <Input type=\"color\" />\r\n    </Field>\r\n    <Field label=\"date\">\r\n      <Input type=\"date\" />\r\n    </Field>\r\n    <Field label=\"range\">\r\n      <Input type=\"range\" />\r\n    </Field>\r\n    <Field label=\"search\">\r\n      <Input type=\"search\" />\r\n    </Field>\r\n    <Field label=\"email\">\r\n      <Input type=\"email\" />\r\n    </Field>\r\n    <Field label=\"password\">\r\n      <Input type=\"password\" />\r\n    </Field>\r\n    <Field label=\"time\">\r\n      <Input type=\"time\" />\r\n    </Field>\r\n    <Field label=\"url\">\r\n      <Input type=\"url\" />\r\n    </Field>\r\n    <Field label=\"month\">\r\n      <Input type=\"month\" />\r\n    </Field>\r\n    <Field label=\"week\">\r\n      <Input type=\"week\" />\r\n    </Field>\r\n    <Radio label=\"Radio default\" readOnly />\r\n    <Radio checked label=\"Radio checked\" readOnly />\r\n    <Radio disabled label=\"Radio disabled\" readOnly />\r\n    <Radio disabled checked label=\"Radio checked disabled\" readOnly />\r\n    <Checkbox label=\"Checkbox default\" readOnly />\r\n    <Checkbox checked label=\"Checkbox checked\" readOnly />\r\n    <Checkbox disabled label=\"Checkbox disabled\" readOnly />\r\n    <Checkbox disabled checked label=\"Checkbox checked disabled\" readOnly />\r\n\r\n    <Box my={4} opacity={0.6}>\r\n      <Flex>\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n      </Flex>\r\n      <Flex>\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n      </Flex>\r\n      <Flex>\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n      </Flex>\r\n      <Flex>\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n        <Box width={1} height={'4rem'} bg={'primary'} m={1} />\r\n      </Flex>\r\n    </Box>\r\n\r\n    <Card m={3} />\r\n    <Card mx=\"auto\" px=\"4\" color=\"primary\">\r\n      <Heading mb={3}>Heading</Heading>\r\n      <Text mb={4}>\r\n        What Algorand functions would you like to see implemented in Pipeline UI for React?\r\n      </Text>\r\n      <Flex>\r\n        <Button mr={3}>Accept</Button>\r\n        <Button.Outline>Cancel</Button.Outline>\r\n        <Button.Text ml={'auto'}>Skip</Button.Text>\r\n      </Flex>\r\n    </Card>\r\n    <Table />\r\n    <Image src=\"https://source.unsplash.com/random/1280x720\" />\r\n    <AlgoSendButton>Send</AlgoSendButton>\r\n    <Loader size=\"80px\" />\r\n    <QR value=\"test\" />\r\n    <Modal />\r\n    <ToastMessage />\r\n    <ToastMessage.Processing />\r\n    <ToastMessage.Success />\r\n    <ToastMessage.Failure />\r\n    <Pill>{'Pill Text'}</Pill>\r\n    <Pill color={'success'}>{'Pill Text'}</Pill>\r\n    <Pill color={'warning'}>{'Pill Text'}</Pill>\r\n    <Pill color={'danger'}>{'Pill Text'}</Pill>\r\n    <Pill color={'info'}>{'Pill Text'}</Pill>\r\n    <Pill color={'#4B0082'}>{'Pill Text'}</Pill>\r\n    <Flash>\r\n      I am a Flash with a <Flash.Link>Link</Flash.Link>\r\n    </Flash>\r\n    <Flash variant={'info'}>\r\n      I am a INFO Flash with a <Flash.Link>Link</Flash.Link>\r\n    </Flash>\r\n    <Flash variant={'warning'}>\r\n      I am a WARNING Flash with a <Flash.Link>Link</Flash.Link>\r\n    </Flash>\r\n    <Flash variant={'success'}>\r\n      I am a SUCCESS Flash with a <Flash.Link>Link</Flash.Link>\r\n    </Flash>\r\n    <Flash variant={'danger'}>\r\n      I am a DANGER Flash with a <Flash.Link>Link</Flash.Link>\r\n    </Flash>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <PipelineShell textAlign=\"left\" position={'relative'}>\r\n        <Box m={4}>\r\n          <BaseStyles>{testComponents()}</BaseStyles>\r\n        </Box>\r\n       {/*<BaseLineGrid/> uncomment to make background alternating white and rose lines*/}\r\n      </PipelineShell>\r\n    )\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst BaseLineGrid = styled.div`\r\n  position: absolute;\r\n  z-index: 99999;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  opacity: 0.1;\r\n  pointer-events: none;\r\n  background: repeating-linear-gradient(\r\n    salmon, salmon 0.5rem,\r\n    white 0.5rem, white 1rem\r\n    );\r\n`;\r\n\r\nexport default BaseLineGrid;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}