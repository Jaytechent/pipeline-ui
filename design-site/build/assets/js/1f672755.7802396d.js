"use strict";(self.webpackChunkpipeline_ui_website=self.webpackChunkpipeline_ui_website||[]).push([[4607],{6501:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=a(87462),i=a(63366),o=(a(67294),a(3905)),r=["components"],l={},s="Overview",p={unversionedId:"Smart Contracts Lab/about",id:"Smart Contracts Lab/about",isDocsHomePage:!1,title:"Overview",description:"The Smart Contract Command Lab is an online tool to experiment with deploying and using TEAL (Transaction Execution Approval Lanuage) smart contracts.",source:"@site/docs/Smart Contracts Lab/about.mdx",sourceDirName:"Smart Contracts Lab",slug:"/Smart Contracts Lab/about",permalink:"/docs/Smart Contracts Lab/about",editUrl:"https://github.com/headline-design/pipeline-ui/blob/main/design-site/docs/Smart Contracts Lab/about.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Transaction Demo",permalink:"/docs/Demos/transaction"},next:{title:"Demo",permalink:"/docs/Smart Contracts Lab/demo"}},d=[{value:"Get started",id:"get-started",children:[],level:2},{value:"Morra Game",id:"morra-game",children:[],level:2}],c={toc:d};function m(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The Smart Contract Command Lab is an online tool to experiment with deploying and using TEAL (Transaction Execution Approval Lanuage) smart contracts. "),(0,o.kt)("h2",{id:"get-started"},"Get started"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Select your net (for security reasons, the demo only allows the selection of testnet. You can enable mainnet by forking our github repoisotory and adding MainNet to the network ",(0,o.kt)("inlineCode",{parentName:"p"},"<Select>")," element)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Navigate to your MyAlgo wallet and set your wallet to testnet using their dropdown menu.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Fund your wallet via the link provided in the Demo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Select either a Reach or Teal contract using the dropdown menus. "))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The demo's ",(0,o.kt)("inlineCode",{parentName:"p"},"log"),' window will only log messages provided by the reach "frontend" and transaction id\'s for teal-only deploys. We reccomend that at this point user open their browser console logs by right-clicking on the screen, hitting ',(0,o.kt)("inlineCode",{parentName:"p"},"inspect")," and selecting the ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," options."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 For all Reach contracts (except ",(0,o.kt)("inlineCode",{parentName:"p"},"Morra Game"),"), clicking ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy and Run Reach"),' will both deploy the smart contract and run the frontend and "backend" code associated with the Reach example, using your own connected addess to run the code for all participants.')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 A key feature of our implementation of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Morra Game"),' is to demonstrate how Reach code can be utilized without any third-party "backends" or RPC servers. The same code exists on all client machines, with participants merely inputing the app id of the Morra Game. ')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 The Morra Game must be played with two seperate addresses (documented below)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 For the provided TEAL contracts, clicking ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy TEAL")," will merely deploy the smart contract with the following initial conditions: "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"let registrationStart = algosdk.encodeUint64(params.firstRound)\nlet registrationEnd = algosdk.encodeUint64(params.firstRound + 1000)\nlet voteStart = algosdk.encodeUint64(params.firstRound + 2000)\nlet voteEnd = algosdk.encodeUint64(params.firstRound + 3000)\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u2022 Custom TEAL contracts will also be only deployed, but ",(0,o.kt)("inlineCode",{parentName:"li"},"appArgs"),", byte slices and local/global integers can be fully customized.")),(0,o.kt)("h2",{id:"morra-game"},"Morra Game"),(0,o.kt)("p",null,"Selecting the Reach Morra Game will display a dropdown to select a role and input for an app id."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 To run the game, 2 users load the demo on seperate machines and connect their seperate accounts. The user who will deploy the contract and act as participant ",(0,o.kt)("inlineCode",{parentName:"p"},"Alice")," selects the ",(0,o.kt)("inlineCode",{parentName:"p"},"Deployer")," role and deploys the contract.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 Immediately after deploying the contract, Alice must locate the app id on AlgoExplorer and share it with user ",(0,o.kt)("inlineCode",{parentName:"p"},"Bob"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 User ",(0,o.kt)("inlineCode",{parentName:"p"},"Bob")," inputs the app id and clicks ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 At this point, the Reach code automatically generates the bets and guesses for both participants, only requiring that the transactions be signed in MyAlgo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 If the smart contract obverves a winner, the winner will recienve the amount wagered by the loser. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"\u2022 In the event of either a winner or timeout, the Reach code will automatically prompt user ",(0,o.kt)("inlineCode",{parentName:"p"},"Alice")," to delete the app."))))}m.isMDXComponent=!0}}]);